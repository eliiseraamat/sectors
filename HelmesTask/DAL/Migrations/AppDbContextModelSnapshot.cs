// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AgreedToTerms")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Domain.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentSectorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentSectorId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("Domain.SectorInForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("integer");

                    b.Property<int>("SectorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("SectorId");

                    b.ToTable("SectorInForms");
                });

            modelBuilder.Entity("Domain.Sector", b =>
                {
                    b.HasOne("Domain.Sector", "ParentSector")
                        .WithMany("ChildSectors")
                        .HasForeignKey("ParentSectorId");

                    b.Navigation("ParentSector");
                });

            modelBuilder.Entity("Domain.SectorInForm", b =>
                {
                    b.HasOne("Domain.Form", "Form")
                        .WithMany("SectorInForms")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Sector", "Sector")
                        .WithMany("SectorInForms")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Domain.Form", b =>
                {
                    b.Navigation("SectorInForms");
                });

            modelBuilder.Entity("Domain.Sector", b =>
                {
                    b.Navigation("ChildSectors");

                    b.Navigation("SectorInForms");
                });
#pragma warning restore 612, 618
        }
    }
}
